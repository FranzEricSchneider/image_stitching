How I got the OpenCV stitcher sample code to compile

I was #include-ing the following headers
	#include <opencv2/imgcodecs.hpp>
	#include <opencv2/highgui.hpp>
	#include <opencv2/stitching.hpp>

So I right-clicked on the Code::Blocks project and went
	rghtclk > Build Options > Search directories > Compiler > Add > /usr/local/lib/opencv2
	rghtclk > Build Options > Search directories > Linker > Add > /usr/local/lib
	rghtclk > Build Options > Linker settings > Add >
		/usr/local/lib/libopencv_stitching.so
		/usr/local/lib/libopencv_core.so.3.0
		/usr/local/lib/libopencv_highgui.so
		/usr/local/lib/libopencv_imgcodecs.so

I chose these locations because I went and checked and found the opencv code there

I had trouble with including Eigen/Dense until I added to Search directories > Compiler
		/usr/include/eigen3

I had trouble with cv::cvtColor until I added to Linker settings
		/usr/local/lib/libopencv_calib3d.so

I had trouble with
	vector<AprilTags::TagDetection> detections = m_tagDetector->extractTags(image_gray);
	and
	detections[i].draw(image);
	and
	detection.getRelativeTranslationRotation(m_tagSize, m_fx, m_fy, m_px, m_py,
                                            translation, rotation);
until I added to Linker settings
		/usr/local/lib/libopencv_imgproc.so

I downloaded the C++ gnuplot library from here: http://www.stahlke.org/dan/gnuplot-iostream/
Then installed gnuplot from here: sudo apt-get install gnuplot
								  sudo apt-get install gnuplot-x11
	I put gnuplot-iostream in /usr/local/include
		Then in Search directories > Compiler I added /usr/local/include/gnuplot-iostream

I installed boost with sudo apt-get install libboost-all-dev
		In Linker settings I added 'boost_system' (with no file path, it's weird)
		In Linker settings I added 'boost_iostreams'
		In Linker settings I added 'boost_filesystem'
		In Search directories > Compiler I added /usr/include/boost
